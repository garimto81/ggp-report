name: Slack Reports

on:
  schedule:
    # 한국시간 오전 10시 = UTC 오전 1시
    # 일간 보고서: 평일 오전 10시 (월요일 제외 - 주간 보고서 우선)
    - cron: '0 1 * * 2-5'  # 화-금
    # 주간 보고서: 매주 월요일 오전 10시 (첫번째 월요일 제외 - 월간 보고서 우선)
    - cron: '0 1 * * 1'    # 월요일
  workflow_dispatch:
    inputs:
      report_type:
        description: 'Report type to generate'
        required: true
        default: 'daily'
        type: choice
        options:
          - daily
          - weekly
          - monthly

jobs:
  generate-report:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Determine report type
      id: report-type
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "type=${{ github.event.inputs.report_type }}" >> $GITHUB_OUTPUT
          echo "should_run=true" >> $GITHUB_OUTPUT
        else
          # 한국 시간 기준으로 날짜 정보 가져오기
          KST_DATE=$(TZ='Asia/Seoul' date '+%Y-%m-%d')
          KST_DAY=$(TZ='Asia/Seoul' date '+%d')
          KST_DOW=$(TZ='Asia/Seoul' date '+%u')  # 1=Monday, 7=Sunday
          
          echo "KST Date: $KST_DATE (Day: $KST_DAY, DOW: $KST_DOW)"
          
          if [ "$KST_DOW" = "1" ]; then
            # 월요일
            # 첫번째 월요일인지 확인 (날짜가 1-7일 사이)
            if [ "$KST_DAY" -ge "1" ] && [ "$KST_DAY" -le "7" ]; then
              # 첫번째 월요일 - 월간 보고서
              echo "type=monthly" >> $GITHUB_OUTPUT
              echo "should_run=true" >> $GITHUB_OUTPUT
            else
              # 나머지 월요일 - 주간 보고서
              echo "type=weekly" >> $GITHUB_OUTPUT
              echo "should_run=true" >> $GITHUB_OUTPUT
            fi
          else
            # 화-금 - 일간 보고서
            echo "type=daily" >> $GITHUB_OUTPUT
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi
        fi
    
    - name: Generate report
      if: steps.report-type.outputs.should_run == 'true'
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
        SLACK_DM_USER_ID: ${{ secrets.SLACK_DM_USER_ID }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        echo "Generating ${{ steps.report-type.outputs.type }} report..."
        node dist/generate-report.js --type ${{ steps.report-type.outputs.type }}